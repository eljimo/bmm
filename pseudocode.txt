BMM

Badminton Match Making

Club
{
	"id":<String:UUID>,
	"name":<String(127)>,
	"sessionTime":<int:1~1024>,
	"matchTime":<int:1~1024>,
	"numberOfCourt":<int:1~1024>,
	"players": [<list of players>]
}

Player
{
	"id":<String:UUID>,
	"name":<String(127)>,
	"rating":<int:1~10>,
	"priority":<int:1~10>,
	"gender":<String:male/female>,
	"friends": [
		{"id":<String:UUID of another player>},
		{"id":<String:UUID of another player>}
		...
	]
}

Session
{
	"currentGame":<int>
	"games":[<list of games>]
}

Game
{
	"id":<String:UUID>,
	"gameNumber":<int:1~10>,
	"courts": [count1, count2...]
}

Court
{
	"courtNumber":<int:1~10>,
	"player1":<String:UUID of another player>,
	"player2":<String:UUID of another player>,
	"player3":<String:UUID of another player>,
	"player4":<String:UUID of another player>
}


generateGame() {
	initialize new game
	load club
	load session //previous games
	updatePriority(club,session) //update priority of each player based on their previous game
	new game(courts=COUNT_NUMBER)
	for courts in game{
		place a random player in the highest priority available
		place a different random player based on skill relevance / skill / gender
		place a different random player based on skill relevance / skill / gender
		place a different random player based on skill relevance / skill / gender
	}
	return game
}